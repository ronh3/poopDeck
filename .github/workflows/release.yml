name: Build and Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up environment
        run: |
          # Fix line endings and make executable
          sed -i 's/\r$//' .github/scripts/bump-version.sh
          chmod +x .github/scripts/bump-version.sh
          
      - name: Get commit message
        id: commit
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          echo "message=$COMMIT_MSG" >> $GITHUB_OUTPUT
          
      - name: Bump version
        id: version
        run: |
          # Ensure VERSION file exists from mfile if needed
          if [ ! -f VERSION ]; then
            grep -oP '"version":\s*"\K[^"]+' mfile > VERSION
          fi
          
          # Run version bump script
          .github/scripts/bump-version.sh "${{ steps.commit.outputs.message }}"
          
          # Read the new version
          NEW_VERSION=$(cat VERSION)
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
      - name: Build with Muddler
        uses: demonnic/build-with-muddler@main
        with:
          muddlerVersion: "LATEST"
          
      - name: Rename to .mpackage
        run: |
          cd build/tmp/
          for file in *.zip; do
            if [ -f "$file" ]; then
              # Rename with version number
              mv "$file" "poopDeck-${{ steps.version.outputs.version }}.mpackage"
              echo "Created poopDeck-${{ steps.version.outputs.version }}.mpackage"
            fi
          done
          
      - name: Generate changelog
        id: changelog
        run: |
          # Get the last tag
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          
          if [ -z "$LAST_TAG" ]; then
            # No previous tags, include all commits
            COMMITS=$(git log --pretty=format:"- %s" --no-merges)
          else
            # Get commits since last tag
            COMMITS=$(git log ${LAST_TAG}..HEAD --pretty=format:"- %s" --no-merges)
          fi
          
          # Create changelog content
          cat > CHANGELOG.md << EOF
          ## ðŸš¢ poopDeck v${{ steps.version.outputs.version }}
          
          ### Changes in this release:
          
          $COMMITS
          
          ### Installation
          1. Download the \`.mpackage\` file below
          2. In Mudlet: Package Manager â†’ Install
          3. Select the downloaded file
          4. Type \`poopdeck\` to get started!
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/${LAST_TAG}...v${{ steps.version.outputs.version }}
          EOF
          
      - name: Commit version changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add VERSION mfile
          git commit -m "chore: bump version to ${{ steps.version.outputs.version }}" || exit 0
          git push
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: poopDeck v${{ steps.version.outputs.version }}
          body_path: CHANGELOG.md
          files: build/tmp/*.mpackage
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: poopDeck-${{ steps.version.outputs.version }}
          path: build/tmp/*.mpackage